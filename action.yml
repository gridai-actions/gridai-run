name: "Grid.ai Run Artifact"
inputs:
  # required
  script-name:
    required: true
    default: "run.py"
    type: string   
    description: "The name of the script to run"
  script-dir:
    required: false
    default: "./"
    type: string   
    description: "Directory where the script is at"
  # optional    
  grid-args:
    required: false
    default: "--localdir --instance_type t2.medium --dependency_file requirements.txt"
    type: string    
    description: "Arguments to grid run command"
  script-args:
    required: false
    default: ""
    type: string
    description: "Arguments to the script"
  success-status:
    required: false
    default: "succeeded"
    type: string               
    description: "grid run status text for successful execution"
runs:
  using: "composite"
  steps:
    - run: |
        cd ${{ inputs.script-dir }}
        pwd
        ls -R
      shell: bash  
    - run: |
        cd ${{ inputs.script-dir }}
        grid run ${{ inputs.grid-args }} ${{ inputs.script-name }} ${{ inputs.script-args }} | tee grid.run.log
        export run_name=$(cat grid.run.log | awk -F: '$1=/grid_name/ {print $2}' | tr -s '[:blank:]')
        echo "run_name=${run_name}" >> $GITHUB_ENV           
        if [[ -z "${run_name}" ]]; then
          echo "Error: 'grid_name:[run_name]' not found in output"
          exit 1
        fi  
      shell: bash  
    - id: grid-status
      uses: gridai-actions/gridai-status@v0
      with:
        obj-type: run
        obj-id: ${run_name}
    - run: |
        if [ "${{ steps.grid-status.outputs.obj-status }}" != "${{ inputs.success-status }}" ]; then
          exit 1
        fi             
      shell: bash  
    - run: |
        cd ${{ inputs.script-dir }}
        grid artifacts ${{ env.run_name }}
        if [[ $? != 0 ]]; then
          echo "Error: ${run_name} artifacts not found"
          exit 1
        fi
        ls grid_artifacts/*
      shell: bash  
